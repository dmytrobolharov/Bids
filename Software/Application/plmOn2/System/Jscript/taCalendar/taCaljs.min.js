/*2014-06-27*/
function nearBestPosition(whereId, theObjId, centerOnEl) {
    var el = whereId,
        target = theObjId;
    if ("object" != typeof whereId && (el = $("#" + whereId)), "object" != typeof theObjId && (target = $("#" + theObjId)), el) {
        target.css("visibility", "hidden");
        var hasContainment = !1;
        target.parents().each(function () {
            "static" != $(this).css("position") && (hasContainment = !0)
        });
        var trueX = hasContainment ? el.position().left : el.offset().left,
            trueY = hasContainment ? el.position().top : el.offset().top,
            h = el.outerHeight(),
            elHeight = parseFloat(h);
        if (centerOnEl) {
            var elWidth = parseFloat(el.outerWidth()),
                targetWidth = parseFloat(target.outerWidth());
            trueX += (elWidth - targetWidth) / 2
        }
        trueY += parseFloat(elHeight);
        var left = trueX,
            top = trueY,
            barHeight = $.browser.msie ? 45 : 35,
            barWidth = $.browser.msie ? 20 : 0;
        trueX && trueY && (target.css("left", left), target.css("top", top)), target.offset().left >= $(window).width() - target.outerWidth() && (left = $(window).width() - target.outerWidth() - barWidth + "px", target.css("left", left)), target.offset().left < 0 && (left = "0px", target.css("left", left)), target.offset().top + target.outerHeight() >= $(window).height() - barHeight && target.outerHeight() < $(window).height() && target.css("margin-top", -(el.outerHeight() + target.outerHeight()) + "px"), target.css("visibility", "visible")
    }
}

function transformToPrintable(data) {
    for (var prop in data) {
        var value = data[prop];
        "string" == typeof value && (data[prop] = (value + "").replace(/\n/g, "<br>"))
    }
    return data
}

function isValidURL(url) {
    var RegExp = /^(([\w]+:)?\/\/)?(([\d\w]|%[a-fA-f\d]{2,2})+(:([\d\w]|%[a-fA-f\d]{2,2})+)?@)?([\d\w][-\d\w]{0,253}[\d\w]\.)+[\w]{2,4}(:[\d]+)?(\/([-+_~.\d\w]|%[a-fA-f\d]{2,2})*)*(\?(&?([-+_~.\d\w]|%[a-fA-f\d]{2,2})=?)*)?(#([-+_~.\d\w]|%[a-fA-f\d]{2,2})*)?$/;
    return RegExp.test(url)
}

function isValidEmail(email) {
    var RegExp = /^((([a-z]|[0-9]|!|#|$|%|&|'|\*|\+|\-|\/|=|\?|\^|_|`|\{|\||\}|~)+(\.([a-z]|[0-9]|!|#|$|%|&|'|\*|\+|\-|\/|=|\?|\^|_|`|\{|\||\}|~)+)*)@((((([a-z]|[0-9])([a-z]|[0-9]|\-){0,61}([a-z]|[0-9])\.))*([a-z]|[0-9])([a-z]|[0-9]|\-){0,61}([a-z]|[0-9])\.)[\w]{2,4}|(((([0-9]){1,3}\.){3}([0-9]){1,3}))|(\[((([0-9]){1,3}\.){3}([0-9]){1,3})\])))$/;
    return RegExp.test(email)
}

function isValidInteger(n) {
    return reg = new RegExp("^[-+]{0,1}[0-9]*$"), reg.test(n)
}

function isValidDouble(n) {
    var sep = Number.decimalSeparator;
    return reg = new RegExp("^[-+]{0,1}[0-9]*[" + sep + "]{0,1}[0-9]*$"), reg.test(n)
}

function isValidTime(n) {
    return !isNaN(millisFromHourMinute(n))
}

function isValidDurationDays(n) {
    return !isNaN(daysFromString(n))
}

function isValidDurationMillis(n) {
    return !isNaN(millisFromString(n))
}

function isValidDurationMillis(n) {
    return !isNaN(millisFromString(n))
}

function isValidCurrency(numStr) {
    for (var regex = "", format = Number.currencyFormat + "", minusFound = !1, numFound = !1, currencyString = "", numberRegex = "[0-9\\" + Number.groupingSeparator + "]+[\\" + Number.decimalSeparator + "]?[0-9]*", i = 0; i < format.length; i++) {
        var ch = format.charAt(i);
        "." == ch || "," == ch || "0" == ch ? "" != currencyString && (regex = regex + "(?:" + RegExp.quote(currencyString) + ")?", currencyString = "") : "#" == ch ? ("" != currencyString && (regex = regex + "(?:" + RegExp.quote(currencyString) + ")?", currencyString = ""), numFound || (numFound = !0, regex += numberRegex)) : "-" == ch ? ("" != currencyString && (regex = regex + "(?:" + RegExp.quote(currencyString) + ")?", currencyString = ""), minusFound || (minusFound = !0, regex += "[-]?")) : currencyString += ch
    }
    minusFound || (regex = "[-]?" + regex), "" != currencyString && (regex = regex + "(?:" + RegExp.quote(currencyString) + ")?"), regex = "^" + regex + "$";
    var rg = new RegExp(regex);
    return rg.test(numStr)
}

function getCurrencyValue(numStr) {
    return isValidCurrency(numStr) ? parseFloat(numStr.replaceAll(Number.groupingSeparator, "").replaceAll(Number.decimalSeparator, ".").replace(/[^0123456789.]/, "")) : 0 / 0
}

function formatCurrency(numberString) {
    return formatNumber(numberString, Number.currencyFormat)
}

function formatNumber(numberString, format) {
    format || (format = "##0.00");
    for (var dec = Number.decimalSeparator, group = Number.groupingSeparator, neg = Number.minusSign, round = !0, validFormat = "0#-,.", prefix = "", negativeInFront = !1, i = 0; i < format.length; i++)
        if (-1 == validFormat.indexOf(format.charAt(i))) prefix += format.charAt(i);
        else {
            if (0 != i || "-" != format.charAt(i)) break;
            negativeInFront = !0
        }
    for (var suffix = "", i = format.length - 1; i >= 0 && -1 == validFormat.indexOf(format.charAt(i)); i--) suffix = format.charAt(i) + suffix;
    format = format.substring(prefix.length), format = format.substring(0, format.length - suffix.length);
    var number = new Number(numberString),
        forcedToZero = !1;
    isNaN(number) && (number = 0, forcedToZero = !0), "%" == suffix && (number = 100 * number);
    var returnString = "";
    if (format.indexOf(".") > -1) {
        var decimalPortion = dec,
            decimalFormat = format.substring(format.lastIndexOf(".") + 1);
        if (round) number = new Number(number.toFixed(decimalFormat.length));
        else {
            var numStr = number.toString();
            numStr = numStr.substring(0, numStr.lastIndexOf(".") + decimalFormat.length + 1), number = new Number(numStr)
        }
        var decimalValue = number % 1,
            decimalString = new String(decimalValue.toFixed(decimalFormat.length));
        decimalString = decimalString.substring(decimalString.lastIndexOf(".") + 1);
        for (var i = 0; i < decimalFormat.length; i++)
            if ("#" == decimalFormat.charAt(i) && "0" != decimalString.charAt(i)) decimalPortion += decimalString.charAt(i);
            else if ("#" == decimalFormat.charAt(i) && "0" == decimalString.charAt(i)) {
                var notParsed = decimalString.substring(i);
                if (!notParsed.match("[1-9]")) break;
                decimalPortion += decimalString.charAt(i)
            } else "0" == decimalFormat.charAt(i) && (decimalPortion += decimalString.charAt(i));
        returnString += decimalPortion
    } else number = Math.round(number);
    var ones = Math.floor(number);
    0 > number && (ones = Math.ceil(number));
    var onesFormat = "";
    onesFormat = -1 == format.indexOf(".") ? format : format.substring(0, format.indexOf("."));
    var onePortion = "";
    if (0 != ones || "#" != onesFormat.substr(onesFormat.length - 1) || forcedToZero) {
        var oneText = new String(Math.abs(ones)),
            groupLength = 9999; -1 != onesFormat.lastIndexOf(",") && (groupLength = onesFormat.length - onesFormat.lastIndexOf(",") - 1);
        for (var groupCount = 0, i = oneText.length - 1; i > -1; i--) onePortion = oneText.charAt(i) + onePortion, groupCount++, groupCount == groupLength && 0 != i && (onePortion = group + onePortion, groupCount = 0);
        if (onesFormat.length > onePortion.length) {
            var padStart = onesFormat.indexOf("0");
            if (-1 != padStart)
                for (var padLen = onesFormat.length - padStart, pos = onesFormat.length - onePortion.length - 1; onePortion.length < padLen; ) {
                    var padChar = onesFormat.charAt(pos);
                    "," == padChar && (padChar = group), onePortion = padChar + onePortion, pos--
                }
        }
    }
    return onePortion || -1 === onesFormat.indexOf("0", onesFormat.length - 1) || (onePortion = "0"), returnString = onePortion + returnString, 0 > number && negativeInFront && prefix.length > 0 ? prefix = neg + prefix : 0 > number && (returnString = neg + returnString), returnString.lastIndexOf(dec) == returnString.length - 1 && (returnString = returnString.substring(0, returnString.length - 1)), returnString = prefix + returnString + suffix
}

function pad(str, len, ch) {
    return (str + "").length < len ? new Array(len - ("" + str).length + 1).join(ch) + str : str
}

function getMillisInHours(millis) {
    if (!millis) return "";
    var sgn = millis >= 0 ? 1 : -1,
        hour = Math.floor(millis / 36e5);
    return (sgn > 0 ? "" : "-") + pad(hour, 2, "0")
}

function getMillisInHoursMinutes(millis) {
    if ("number" != typeof millis) return "";
    var sgn = millis >= 0 ? 1 : -1;
    millis = Math.abs(millis);
    var hour = Math.floor(millis / 36e5),
        min = Math.floor(millis % 36e5 / 6e4);
    return (sgn > 0 ? "" : "-") + pad(hour, 1, "0") + ":" + pad(min, 2, "0")
}

function getMillisInDaysHoursMinutes(millis) {
    if (!millis) return "";
    var sgn = millis >= 0 ? 1 : -1;
    millis = Math.abs(millis);
    var days = Math.floor(millis / millisInWorkingDay),
        hour = Math.floor(millis % millisInWorkingDay / 36e5),
        min = Math.floor((millis - days * millisInWorkingDay - 36e5 * hour) / 6e4);
    return (sgn >= 0 ? "" : "-") + (days > 0 ? days + "  " : "") + pad(hour, 1, "0") + ":" + pad(min, 2, "0")
}

function millisFromHourMinute(stringHourMinutes) {
    var result = 0;
    stringHourMinutes.replace(",", ".");
    var semiColSeparator = stringHourMinutes.indexOf(":"),
        dotSeparator = stringHourMinutes.indexOf(".");
    if (0 > semiColSeparator && 0 > dotSeparator && stringHourMinutes.length > 5) return parseInt(stringHourMinutes, 10);
    if (dotSeparator > -1) {
        var d = parseFloat(stringHourMinutes);
        result = 36e5 * d
    } else {
        var hour = 0,
            minute = 0; -1 == semiColSeparator ? hour = parseInt(stringHourMinutes, 10) : (hour = parseInt(stringHourMinutes.substring(0, semiColSeparator), 10), minute = parseInt(stringHourMinutes.substring(semiColSeparator + 1), 10)), result = 36e5 * hour + 6e4 * minute
    }
    return "number" != typeof result && (result = 0 / 0), result
}

function millisFromString(string, considerWorkingdays) {
    if (!string) return 0;
    var regex = new RegExp("(\\d+[Yy])|(\\d+[M])|(\\d+[Ww])|(\\d+[Dd])|(\\d+[Hh])|(\\d+[m])|(\\d+[Ss])|(\\d+:\\d+)|(:\\d+)|(\\d*[\\.,]\\d+)|(\\d+)", "g"),
        matcher = regex.exec(string),
        totMillis = 0;
    if (!matcher) return 0 / 0;
    for (; null != matcher; ) {
        for (var i = 1; i < matcher.length; i++) {
            var match = matcher[i];
            if (match) {
                var number = 0;
                try {
                    number = parseInt(match)
                } catch (e) { }
                1 == i ? totMillis += number * (considerWorkingdays ? millisInWorkingDay * workingDaysPerWeek * 52 : 31536e6) : 2 == i ? totMillis += number * (considerWorkingdays ? millisInWorkingDay * workingDaysPerWeek * 4 : 2592e6) : 3 == i ? totMillis += number * (considerWorkingdays ? millisInWorkingDay * workingDaysPerWeek : 6048e5) : 4 == i ? totMillis += number * (considerWorkingdays ? millisInWorkingDay : 864e5) : 5 == i ? totMillis += 36e5 * number : 6 == i ? totMillis += 6e4 * number : 7 == i ? totMillis += 1e3 * number : 8 == i ? totMillis += millisFromHourMinute(match) : 9 == i ? totMillis += millisFromHourMinute(match) : 10 == i ? totMillis += millisFromHourMinute(match) : 11 == i && (totMillis += 36e5 * number)
            }
        }
        matcher = regex.exec(string)
    }
    return totMillis
}

function daysFromString(string, considerWorkingdays) {
    if (!string) return void 0;
    var regex = new RegExp("(\\d+[Yy])|(\\d+[Mm])|(\\d+[Ww])|(\\d+[Dd])|(\\d*[\\.,]\\d+)|(\\d+)", "g"),
        matcher = regex.exec(string),
        totDays = 0;
    if (!matcher) return 0 / 0;
    for (; null != matcher; ) {
        for (var i = 1; i < matcher.length; i++) {
            var match = matcher[i];
            if (match) {
                var number = 0;
                try {
                    number = parseInt(match)
                } catch (e) { }
                1 == i ? totDays += number * (considerWorkingdays ? 52 * workingDaysPerWeek : 365) : 2 == i ? totDays += number * (considerWorkingdays ? 4 * workingDaysPerWeek : 30) : 3 == i ? totDays += number * (considerWorkingdays ? workingDaysPerWeek : 7) : 4 == i ? totDays += number : 5 == i ? totDays += number : 6 == i && (totDays += number)
            }
        }
        matcher = regex.exec(string)
    }
    return totDays
}

function stopBubble(e) {
    return $.browser.msie && event ? (event.cancelBubble = !0, event.returnValue = !1) : e && (e.stopPropagation(), e.preventDefault()), !1
}

function validateField() {
    var el = $(this),
        rett = !0;
    el.clearErrorAlert();
    var value = el.val();
    if (value) {
        var type = el.attr("entryType").toUpperCase();
        "INTEGER" == type ? rett = isValidInteger(value) : "DOUBLE" == type ? rett = isValidDouble(value) : "PERCENTILE" == type ? rett = isValidDouble(value) : "URL" == type ? rett = isValidURL(value) : "EMAIL" == type ? rett = isValidEmail(value) : "DURATIONMILLIS" == type ? rett = isValidDurationMillis(value) : "DURATIONDAYS" == type ? rett = isValidDurationDays(value) : "DATE" == type ? rett = Date.isValid(value, el.attr("format")) : "TIME" == type ? rett = isValidTime(value) : "CURRENCY" == type && (rett = isValidCurrency(value)), rett || el.createErrorAlert(i18n.ERROR_ON_FIELD, i18n.INVALID_DATA)
    }
    return rett
}

function jsonErrorHandling(response) {
    if (!response.ok) {
        response.message && alert("ERROR:\n" + response.message);
        for (var i in response.clientEntryErrors) {
            var err = response.clientEntryErrors[i];
            $(":input[name=" + err.name + "]").createErrorAlert(err.error)
        }
    }
}

function Profiler(name) {
    this.startTime = (new Date).getTime(), this.name = name, this.stop = function () {
        __profiler[this.name] || (__profiler[this.name] = {
            millis: 0,
            count: 0
        }), __profiler[this.name].millis += (new Date).getTime() - this.startTime, __profiler[this.name].count++
    }, this.display = function () {
        console.debug(__profiler[this.name])
    }, this.reset = function () {
        delete __profiler[this.name]
    }
}

function openBlackPopup(url, width, height, onCloseCallBack, iframeId) {
    iframeId || (iframeId = "bwinPopup"), width || (width = "900px"), height || (height = "730px"), $("#__blackpopup__").remove();
    var bg = $("<div>").attr("id", "__blackpopup__");
    bg.css({
        position: "fixed",
        top: 0,
        left: 0,
        width: "100%",
        height: "100%",
        textAlign: "center"
    }), window.name != iframeId && bg.bringToFront(), bg.bind("close", function () {
        bg.slideUp(300, function () {
            bg.remove(), "function" == typeof onCloseCallBack && onCloseCallBack()
        })
    }), bg.bind("destroy", function () {
        bg.remove()
    }), bg.find("iframe:first").attr("src", url).css({
        width: width,
        height: height,
        top: 100,
        border: "8px solid #909090",
        backgroundColor: "#ffffff"
    });
    var bdiv = $("<div>").css({
        width: width,
        position: "relative",
        height: "5px",
        textAlign: "right",
        margin: "auto"
    });
    bdiv.append("<img src=\"closeBig.png\" style='cursor:pointer;position:absolute;right:-40px;top:30px;'>"), bdiv.find("img:first").click(function () {
        bg.trigger("close")
    }), bg.prepend(bdiv), $("body").append(bg)
}

function createBlackPage(width, height, onCloseCallBack) {
    width || (width = "900px"), height || (height = "730px"), $("#__blackpopup__").remove();
    var bg = $("<div>").attr("id", "__blackpopup__");
    bg.css({
        position: "fixed",
        top: "0px",
        paddingTop: "50px",
        left: 0,
        width: "100%",
        height: "100%"
    }), bg.append("<div id='bwinPopupd' name='bwinPopupd'></div>"), bg.bringToFront();
    var ret = bg.find("#bwinPopupd");
    ret.css({
        width: width - 300,
        top: 10,
        "-moz-box-shadow": "1px 1px 6px #333333",
        overflow: "auto",
        "-webkit-box-shadow": "1px 1px 6px #333333",
        border: "8px solid #777",
        backgroundColor: "#fff",
        margin: "auto"
    });
    var bdiv = $("<div>").css({
        width: width - 300,
        position: "relative",
        height: "0px",
        textAlign: "right",
        margin: "auto"
    }),
        img = $("<img src='closeBig.png' style='cursor:pointer;position:absolute;right:-40px;top:5px;' title='close'>");
    return bdiv.append(img), img.click(function () {
        bg.trigger("close")
    }), bg.prepend(bdiv), $("body").append(bg), bg.bind("close", function () {
        bg.slideUp(300, function () {
            bg.remove(), "function" == typeof onCloseCallBack && onCloseCallBack()
        })
    }), bg.bind("destroy", function () {
        bg.remove()
    }), ret
}

function getBlackPopup() {
    var ret = $("#__blackpopup__");
    return "undefined" != typeof top && (ret = window.parent.$("#__blackpopup__")), ret
}

function closeBlackPopup() {
    getBlackPopup().trigger("close")
}

function openIssueEditorInBlack(issueId, command, params) {
    command || (command = "ED");
    var editUrl = contextPath + "/applications/teamwork/issue/issueEditor.jsp?CM=" + command + "&OBJID=" + issueId;
    params && (editUrl += params), openBlackPopup(editUrl, 1020, $(window).height() - 50, function () {
        $("#" + issueId).effect("highlight", {
            color: "yellow"
        }, 1500)
    })
}

function openBoardInBlack(boardId, command, params, callback) {
    command || (command = "ED");
    var editUrl = contextPath + "/applications/teamwork/board/boardEditor.jsp?CM=" + command + "&OBJID=" + boardId;
    params && (editUrl += params), openBlackPopup(editUrl, $(window).width() - 100, $(window).height() - 50, callback)
}

function dateToRelative(localTime) {
    var diff = (new Date).getTime() - localTime,
        ret = "",
        min = 6e4,
        hour = 36e5,
        day = 864e5,
        wee = 6048e5,
        mon = 26298e5,
        yea = 315576e5;
    return ret = 2 * -yea > diff ? "in ## years".replace("##", (-diff / yea).toFixed(0)) : 9 * -mon > diff ? "in ## months".replace("##", (-diff / mon).toFixed(0)) : 5 * -wee > diff ? "in ## weeks".replace("##", (-diff / wee).toFixed(0)) : 2 * -day > diff ? "in ## days".replace("##", (-diff / day).toFixed(0)) : -hour > diff ? "in ## hours".replace("##", (-diff / hour).toFixed(0)) : 35 * -min > diff ? "in about one hour" : 25 * -min > diff ? "in about half hour" : 10 * -min > diff ? "in some minutes" : 2 * -min > diff ? "in few minutes" : min >= diff ? "just now" : 5 * min >= diff ? "few minutes ago" : 15 * min >= diff ? "some minutes ago" : 35 * min >= diff ? "about half hour ago" : 75 * min >= diff ? "about an hour ago" : 5 * hour >= diff ? "few hours ago" : 24 * hour >= diff ? "## hours ago".replace("##", (diff / hour).toFixed(0)) : 7 * day >= diff ? "## days ago".replace("##", (diff / day).toFixed(0)) : 5 * wee >= diff ? "## weeks ago".replace("##", (diff / wee).toFixed(0)) : 12 * mon >= diff ? "## months ago".replace("##", (diff / mon).toFixed(0)) : "## years ago".replace("##", (diff / yea).toFixed(0))
}

function holidayArray() {
    return holidayArrayData
}

function isHoliday(date) {
    var friIsHoly = !1,
        satIsHoly = !0,
        sunIsHoly = !0;
    pad = function (val) {
        return val = "0" + val, val.substr(val.length - 2)
    };
    var holidays = holidayArrayForInternal,
        ymd = "#" + date.getFullYear() + "_" + pad(date.getMonth() + 1) + "_" + pad(date.getDate()) + "#",
        md = "#" + pad(date.getMonth() + 1) + "_" + pad(date.getDate()) + "#",
        day = date.getDay();
    return 5 == day && friIsHoly || 6 == day && satIsHoly || 0 == day && sunIsHoly || holidays.indexOf(ymd) > -1 || holidays.indexOf(md) > -1
} !function ($) {
    $.extend($.fn, {
        livequery: function (type, fn, fn2) {
            var q, self = this;
            return $.isFunction(type) && (fn2 = fn, fn = type, type = void 0), $.each($.livequery.queries, function (i, query) {
                return self.selector != query.selector || self.context != query.context || type != query.type || fn && fn.$lqguid != query.fn.$lqguid || fn2 && fn2.$lqguid != query.fn2.$lqguid ? void 0 : (q = query) && !1
            }), q = q || new $.livequery(this.selector, this.context, type, fn, fn2), q.stopped = !1, $.livequery.run(q.id), this
        },
        expire: function (type, fn, fn2) {
            var self = this;
            return $.isFunction(type) && (fn2 = fn, fn = type, type = void 0), $.each($.livequery.queries, function (i, query) {
                self.selector != query.selector || self.context != query.context || type && type != query.type || fn && fn.$lqguid != query.fn.$lqguid || fn2 && fn2.$lqguid != query.fn2.$lqguid || this.stopped || $.livequery.stop(query.id)
            }), this
        }
    }), $.livequery = function (selector, context, type, fn, fn2) {
        return this.selector = selector, this.context = context || document, this.type = type, this.fn = fn, this.fn2 = fn2, this.elements = [], this.stopped = !1, this.id = $.livequery.queries.push(this) - 1, fn.$lqguid = fn.$lqguid || $.livequery.guid++, fn2 && (fn2.$lqguid = fn2.$lqguid || $.livequery.guid++), this
    }, $.livequery.prototype = {
        stop: function () {
            var query = this;
            this.type ? this.elements.unbind(this.type, this.fn) : this.fn2 && this.elements.each(function (i, el) {
                query.fn2.apply(el)
            }), this.elements = [], this.stopped = !0
        },
        run: function () {
            if (!this.stopped) {
                var query = this,
                    oEls = this.elements,
                    els = $(this.selector, this.context),
                    nEls = els.not(oEls);
                this.elements = els, this.type ? (nEls.bind(this.type, this.fn), oEls.length > 0 && $.each(oEls, function (i, el) {
                    $.inArray(el, els) < 0 && $.event.remove(el, query.type, query.fn)
                })) : (nEls.each(function () {
                    query.fn.apply(this)
                }), this.fn2 && oEls.length > 0 && $.each(oEls, function (i, el) {
                    $.inArray(el, els) < 0 && query.fn2.apply(el)
                }))
            }
        }
    }, $.extend($.livequery, {
        guid: 0,
        queries: [],
        queue: [],
        running: !1,
        timeout: null,
        checkQueue: function () {
            if ($.livequery.running && $.livequery.queue.length)
                for (var length = $.livequery.queue.length; length--; ) $.livequery.queries[$.livequery.queue.shift()].run()
        },
        pause: function () {
            $.livequery.running = !1
        },
        play: function () {
            $.livequery.running = !0, $.livequery.run()
        },
        registerPlugin: function () {
            $.each(arguments, function (i, n) {
                if ($.fn[n]) {
                    var old = $.fn[n];
                    $.fn[n] = function () {
                        var r = old.apply(this, arguments);
                        return $.livequery.run(), r
                    }
                }
            })
        },
        run: function (id) {
            void 0 != id ? $.inArray(id, $.livequery.queue) < 0 && $.livequery.queue.push(id) : $.each($.livequery.queries, function (id) {
                $.inArray(id, $.livequery.queue) < 0 && $.livequery.queue.push(id)
            }), $.livequery.timeout && clearTimeout($.livequery.timeout), $.livequery.timeout = setTimeout($.livequery.checkQueue, 20)
        },
        stop: function (id) {
            void 0 != id ? $.livequery.queries[id].stop() : $.each($.livequery.queries, function (id) {
                $.livequery.queries[id].stop()
            })
        }
    }), $.livequery.registerPlugin("append", "prepend", "after", "before", "wrap", "attr", "removeAttr", "addClass", "removeClass", "toggleClass", "empty", "remove"), $(function () {
        $.livequery.play()
    });
    var init = $.prototype.init;
    $.prototype.init = function (a, c) {
        var r = init.apply(this, arguments);
        return a && a.selector && (r.context = a.context, r.selector = a.selector), "string" == typeof a && (r.context = c || document, r.selector = a), r
    }, $.prototype.init.prototype = $.prototype
} (jQuery), jQuery.fn.extend({
    everyTime: function (interval, label, fn, times, belay) {
        return this.each(function () {
            jQuery.timer.add(this, interval, label, fn, times, belay)
        })
    },
    oneTime: function (interval, label, fn) {
        return this.each(function () {
            jQuery.timer.add(this, interval, label, fn, 1)
        })
    },
    stopTime: function (label, fn) {
        return this.each(function () {
            jQuery.timer.remove(this, label, fn)
        })
    }
}), jQuery.extend({
    timer: {
        guid: 1,
        global: {},
        regex: /^([0-9]+)\s*(.*s)?$/,
        powers: {
            ms: 1,
            cs: 10,
            ds: 100,
            s: 1e3,
            das: 1e4,
            hs: 1e5,
            ks: 1e6
        },
        timeParse: function (value) {
            if (void 0 == value || null == value) return null;
            var result = this.regex.exec(jQuery.trim(value.toString()));
            if (result[2]) {
                var num = parseInt(result[1], 10),
                    mult = this.powers[result[2]] || 1;
                return num * mult
            }
            return value
        },
        add: function (element, interval, label, fn, times, belay) {
            var counter = 0;
            if (jQuery.isFunction(label) && (times || (times = fn), fn = label, label = interval), interval = jQuery.timer.timeParse(interval), !("number" != typeof interval || isNaN(interval) || 0 >= interval)) {
                times && times.constructor != Number && (belay = !!times, times = 0), times = times || 0, belay = belay || !1, element.$timers || (element.$timers = {}), element.$timers[label] || (element.$timers[label] = {}), fn.$timerID = fn.$timerID || this.guid++;
                var handler = function () {
                    belay && this.inProgress || (this.inProgress = !0, (++counter > times && 0 !== times || fn.call(element, counter) === !1) && jQuery.timer.remove(element, label, fn), this.inProgress = !1)
                };
                handler.$timerID = fn.$timerID, element.$timers[label][fn.$timerID] || (element.$timers[label][fn.$timerID] = window.setInterval(handler, interval)), this.global[label] || (this.global[label] = []), this.global[label].push(element)
            }
        },
        remove: function (element, label, fn) {
            var ret, timers = element.$timers;
            if (timers) {
                if (label) {
                    if (timers[label]) {
                        if (fn) fn.$timerID && (window.clearInterval(timers[label][fn.$timerID]), delete timers[label][fn.$timerID]);
                        else
                            for (var fn in timers[label]) window.clearInterval(timers[label][fn]), delete timers[label][fn];
                        for (ret in timers[label]) break;
                        ret || (ret = null, delete timers[label])
                    }
                } else
                    for (label in timers) this.remove(element, label, fn);
                for (ret in timers) break;
                ret || (element.$timers = null)
            }
        }
    }
}), jQuery.browser.msie && jQuery(window).one("unload", function () {
    var global = jQuery.timer.global;
    for (var label in global)
        for (var els = global[label], i = els.length; --i; ) jQuery.timer.remove(els[i], label)
}), window.console || (window.console = new function () {
    this.log = function () { }, this.debug = function () { }, this.error = function () { }
}), window.console.debug && window.console.error && window.console.log || (window.console = new function () {
    this.log = function () { }, this.debug = function () { }, this.error = function () { }
}), $.fn.bringToFront = function (selector) {
    var zi = 10,
        elements = $(selector ? selector : "*");
    return elements.each(function () {
        if ("static" != $(this).css("position")) {
            var cur = parseInt($(this).css("zIndex"));
            zi = cur > zi ? parseInt($(this).css("zIndex")) : zi
        }
    }), $(this).css("zIndex", zi += 10)
}, String.prototype.trim = function () {
    return this.replace(/^\s*(\S*(\s+\S+)*)\s*$/, "$1")
}, String.prototype.startsWith = function (t, i) {
    return i ? t.toLowerCase() == this.substring(0, t.length).toLowerCase() : t == this.substring(0, t.length)
}, String.prototype.endsWith = function (t, i) {
    return i ? t.toLowerCase() == this.substring(this.length - t.length).toLowerCase() : t == this.substring(this.length - t.length)
}, String.prototype.asId = function () {
    return this.replace(/[^a-zA-Z0-9_]+/g, "")
}, String.prototype.replaceAll = function (from, to) {
    return this.replace(new RegExp(RegExp.quote(from), "g"), to)
}, Array.prototype.indexOf || (Array.prototype.indexOf = function (searchElement) {
    if (null == this) throw new TypeError;
    var t = Object(this),
        len = t.length >>> 0;
    if (0 === len) return -1;
    var n = 0;
    if (arguments.length > 0 && (n = Number(arguments[1]), n != n ? n = 0 : 0 != n && 1 / 0 != n && n != -1 / 0 && (n = (n > 0 || -1) * Math.floor(Math.abs(n)))), n >= len) return -1;
    for (var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0); len > k; k++)
        if (k in t && t[k] === searchElement) return k;
    return -1
}), Object.size = function (obj) {
    var key, size = 0;
    for (key in obj) obj.hasOwnProperty(key) && size++;
    return size
}, RegExp.quote = function (str) {
    return str.replace(/([.?*+^$[\]\\(){}-])/g, "\\$1")
}, jQuery.fn.clearErrorAlert = function () {
    return this.each(function () {
        var el = $(this);
        el.removeAttr("invalid").removeClass("formElementsError"), $("#" + el.attr("id") + "error").remove()
    }), this
}, jQuery.fn.createErrorAlert = function (errorCode, message) {
    return this.each(function () {
        var el = $(this);
        if (el.attr("invalid", "true").addClass("formElementsError"), $("#" + el.attr("id") + "error").size() <= 0) {
            var errMess = (errorCode ? errorCode : "") + ": " + (message ? message : ""),
                err = "<img width='17' heigh='17' id=\"" + el.attr("id") + "error\" error='1'";
            err += " onclick=\"alert($(this).attr('title'))\" border='0' align='absmiddle'>", err = $(err), err.attr("title", errMess).attr("src", skinImgPath + "alert.gif"), el.after(err)
        }
    }), this
}, jQuery.fn.updateOldValue = function () {
    return this.each(function () {
        var el = $(this);
        el.data("_oldvalue", el.val())
    }), this
}, jQuery.fn.isValueChanged = function () {
    var ret = !1;
    return this.each(function () {
        var el = $(this);
        return el.val() + "" != el.data("_oldvalue") + "" ? (ret = !0, !1) : void 0
    }), ret
}, jQuery.fn.getOldValue = function () {
    return $(this).data("_oldvalue")
}, $.fn.unselectable = function () {
    return this.each(function () {
        $(this).addClass("unselectable").attr("unselectable", "on")
    }), $(this)
}, $.fn.clearUnselectable = function () {
    return this.each(function () {
        $(this).removeClass("unselectable").removeAttr("unselectable")
    }), $(this)
};
var __profiler = {};
Profiler.reset = function () {
    __profiler = {}
}, Profiler.displayAll = function () {
    var ret = "",
        totMillis = 0;
    for (var key in __profiler) {
        var p = __profiler[key],
            extraspace = "                          ".substr(0, 30 - key.length);
        ret += key + extraspace + "	 millis:" + p.millis + "	 count:" + p.count + "\n", totMillis += p.millis
    }
    console.debug(ret)
}, jQuery.fn.dateField = function (options) {
    if (!options.inputField) return console.error("You must supply an input field"), !1;
    if ("undefined" == typeof options.firstDayOfWeek && (options.firstDayOfWeek = Date.firstDayOfWeek), "undefined" == typeof options.useWheel && (options.useWheel = !0), "undefined" == typeof options.dateFormat && (options.dateFormat = Date.defaultFormat), !options.inputField.is("[readonly]") && !options.inputField.is("[disabled]")) {
        var calendar = {
            currentDate: new Date
        };
        calendar.options = options;
        var theOpener = this.eq(0),
            theDiv = $("<div>").addClass("calBox"),
            divNavBar = $("<div>").addClass("calNavBar"),
            divDays = $("<div>").addClass("calDay");
        if (divDays.addClass("calFullMonth"), theDiv.append(divNavBar).append(divDays), options.isSearchField) {
            var divShortcuts = $("<div>").addClass("shortCuts").html("<span title='last quarter'>LQ</span> <span title='last month'>LM</span> <span title='this month'>M</span> <span title='last week'>LW</span> <span title='this week'>W</span> <span title='yesterday'>Y</span> <span title='today'>T</span><span title='tomorrow'>TO</span> <span title='next week'>NW</span> <span title='next month'>NM</span> <span title='this quarter'>Q</span> <span title='next quarter'>NQ</span>");
            divShortcuts.click(function (ev) {
                var el = $(ev.target);
                el.is("span") && (options.isSearchField ? options.inputField.val(el.text().trim()) : options.inputField.val(Date.parseString(el.text().trim(), options.dateFormat).format(options.dateFormat), !0), theDiv.remove())
            }), theDiv.append(divShortcuts)
        }
        $("body").append(theDiv), nearBestPosition(theOpener, theDiv), theDiv.bringToFront(), $("body").oneTime(100, "regclibodcal", function () {
            $("body").bind("click.dateField", function () {
                $(this).unbind("click.dateField"), theDiv.remove()
            })
        }), calendar.drawCalendar = function (date) {
            calendar.currentDate = date;
            var fillNavBar = function (date) {
                var t = new Date(date.getTime());
                divNavBar.empty(), t.setMonth(t.getMonth() - 1);
                var spanPrev = $("<span>").addClass("calElement noCallback prev").attr("millis", t.getTime());
                t.setMonth(t.getMonth() + 1);
                var spanMonth = $("<span>").html(t.format("MMMM yyyy"));
                t.setMonth(t.getMonth() + 1);
                var spanNext = $("<span>").addClass("calElement noCallback next").attr("millis", t.getTime());
                divNavBar.append(spanPrev).append(spanMonth).append(spanNext)
            },
                fillDaysFullMonth = function (date) {
                    divDays.empty();
                    var t = new Date,
                        w = parseInt((theDiv.width() - 4 - 28) / 7) + "px",
                        d = new Date(date);
                    d.setFirstDayOfThisWeek(options.firstDayOfWeek);
                    for (var i = 0; 7 > i; i++) {
                        var span = $("<span>").addClass("calDayHeader").attr("day", d.getDay());
                        span.css("width", w), span.html(Date.dayAbbreviations[d.getDay()]), "function" == typeof options.dayHeaderRenderer && options.dayHeaderRenderer(span, d.getDay()), divDays.append(span), d.setDate(d.getDate() + 1)
                    }
                    d = new Date(date), d.setDate(1), d.setFirstDayOfThisWeek(options.firstDayOfWeek);
                    for (var i = 0; d.getMonth() <= date.getMonth() && d.getFullYear() <= date.getFullYear() || d.getFullYear() < date.getFullYear() || i % 7 != 0; ) {
                        var span = $("<span>").addClass("calElement day").attr("millis", d.getTime());
                        span.html("<span class=dayNumber>" + d.getDate() + "</span>").css("width", w), d.getYear() == t.getYear() && d.getMonth() == t.getMonth() && d.getDate() == t.getDate() && span.addClass("today"), d.getYear() == date.getYear() && d.getMonth() == date.getMonth() && d.getDate() == date.getDate() && span.addClass("selected"), d.getMonth() != date.getMonth() && span.addClass("calOutOfScope"), "function" == typeof options.dayRenderer && options.dayRenderer(span, d), divDays.append(span), d.setDate(d.getDate() + 1), i++
                    }
                };
            fillNavBar(date), fillDaysFullMonth(date)
        }, theDiv.click(function (ev) {
            var el = $(ev.target).closest(".calElement");
            if (el.size() > 0) {
                var date = new Date(parseInt(el.attr("millis")));
                el.hasClass("day") ? (theDiv.remove(), el.is(".noCallback") || (options.inputField.val(date.format(options.dateFormat)).attr("millis", date.getTime()).focus(), "function" == typeof options.callback && options.callback(date))) : calendar.drawCalendar(date)
            }
            ev.stopPropagation()
        }), $.event.special.mousewheel && options.useWheel && divDays.mousewheel(function (event, delta) {
            var d = new Date(calendar.currentDate.getTime());
            return d.setMonth(d.getMonth() + delta), calendar.drawCalendar(d), !1
        });
        var dateStr = options.inputField.val();
        if (console.log(dateStr), dateStr && Date.isValid(dateStr, options.dateFormat, !0)) {
            var date = Date.parseString(dateStr, options.dateFormat, !0);
            options.isSearchField || options.inputField.val(date.format(options.dateFormat)).attr("millis", date.getTime()), calendar.drawCalendar(date)
        } else calendar.drawCalendar(new Date);
        return calendar
    }
}, Date.$VERSION = 1.02, Date.LZ = function (x) {
    return (0 > x || x > 9 ? "" : "0") + x
}, Date.monthNames = new Array("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), Date.monthAbbreviations = new Array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), Date.dayNames = new Array("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), Date.dayAbbreviations = new Array("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"), Date.preferAmericanFormat = !0, Date.firstDayOfWeek = 0, Date.defaultFormat = "dd/MM/yyyy", Date.prototype.getFullYear || (Date.prototype.getFullYear = function () {
    var yy = this.getYear();
    return 1900 > yy ? yy + 1900 : yy
}), Date.parseString = function (val, format) {
    if ("undefined" == typeof format || null == format || "" == format) {
        for (var generalFormats = new Array(Date.defaultFormat, "y-M-d", "MMM d, y", "MMM d,y", "y-MMM-d", "d-MMM-y", "MMM d", "MMM-d", "d-MMM"), monthFirst = new Array("M/d/y", "M-d-y", "M.d.y", "M/d", "M-d"), dateFirst = new Array("d/M/y", "d-M-y", "d.M.y", "d/M", "d-M"), checkList = new Array(generalFormats, Date.preferAmericanFormat ? monthFirst : dateFirst, Date.preferAmericanFormat ? dateFirst : monthFirst), i = 0; i < checkList.length; i++)
            for (var l = checkList[i], j = 0; j < l.length; j++) {
                var d = Date.parseString(val, l[j]);
                if (null != d) return d
            }
        return null
    }
    this.isInteger = function (val) {
        for (var i = 0; i < val.length; i++)
            if (-1 == "1234567890".indexOf(val.charAt(i))) return !1;
        return !0
    }, this.getInt = function (str, i, minlength, maxlength) {
        for (var x = maxlength; x >= minlength; x--) {
            var token = str.substring(i, i + x);
            if (token.length < minlength) return null;
            if (this.isInteger(token)) return token
        }
        return null
    }, this.decodeShortcut = function (str) {
        var dateUpper = str.trim().toUpperCase(),
            ret = new Date;
        if (ret.clearTime(), ["NOW", "N"].indexOf(dateUpper) >= 0) ret = new Date;
        else if (["TODAY", "T"].indexOf(dateUpper) >= 0);
        else if (["YESTERDAY", "Y"].indexOf(dateUpper) >= 0) ret.setDate(ret.getDate() - 1);
        else if (["TOMORROW", "TO"].indexOf(dateUpper) >= 0) ret.setDate(ret.getDate() + 1);
        else if (["W", "TW", "WEEK", "THISWEEK", "WEEKSTART", "THISWEEKSTART"].indexOf(dateUpper) >= 0) ret.setFirstDayOfThisWeek();
        else if (["LW", "LASTWEEK", "LASTWEEKSTART"].indexOf(dateUpper) >= 0) ret.setFirstDayOfThisWeek(), ret.setDate(ret.getDate() - 7);
        else if (["NW", "NEXTWEEK", "NEXTWEEKSTART"].indexOf(dateUpper) >= 0) ret.setFirstDayOfThisWeek(), ret.setDate(ret.getDate() + 7);
        else if (["M", "TM", "MONTH", "THISMONTH", "MONTHSTART", "THISMONTHSTART"].indexOf(dateUpper) >= 0) ret.setDate(1);
        else if (["LM", "LASTMONTH", "LASTMONTHSTART"].indexOf(dateUpper) >= 0) ret.setDate(1), ret.setMonth(ret.getMonth() - 1);
        else if (["NM", "NEXTMONTH", "NEXTMONTHSTART"].indexOf(dateUpper) >= 0) ret.setDate(1), ret.setMonth(ret.getMonth() + 1);
        else if (["Q", "TQ", "QUARTER", "THISQUARTER", "QUARTERSTART", "THISQUARTERSTART"].indexOf(dateUpper) >= 0) ret.setDate(1), ret.setMonth(3 * Math.floor(ret.getMonth() / 3));
        else if (["LQ", "LASTQUARTER", "LASTQUARTERSTART"].indexOf(dateUpper) >= 0) ret.setDate(1), ret.setMonth(3 * Math.floor(ret.getMonth() / 3) - 3);
        else if (["NQ", "NEXTQUARTER", "NEXTQUARTERSTART"].indexOf(dateUpper) >= 0) ret.setDate(1), ret.setMonth(3 * Math.floor(ret.getMonth() / 3) + 3);
        else if (/^-?[0-9]+[DWMY]$/.test(dateUpper)) {
            var lastOne = dateUpper.substr(dateUpper.length - 1),
                val = parseInt(dateUpper.substr(0, dateUpper.length - 1));
            "W" == lastOne ? ret.setDate(ret.getDate() + 7 * val) : "M" == lastOne ? ret.setMonth(ret.getMonth() + val) : "Y" == lastOne && ret.setYear(ret.getYear() + val)
        } else ret = void 0;
        return ret
    };
    var ret = this.decodeShortcut(val);
    if (ret) return ret;
    val += "", format += "";
    for (var x, y, i_val = 0, i_format = 0, c = "", token = "", year = (new Date).getFullYear(), month = 1, date = 1, hh = 0, mm = 0, ss = 0, ampm = ""; i_format < format.length; ) {
        for (c = format.charAt(i_format), token = ""; format.charAt(i_format) == c && i_format < format.length; ) token += format.charAt(i_format++);
        if ("yyyy" == token || "yy" == token || "y" == token) {
            if ("yyyy" == token && (x = 4, y = 4), "yy" == token && (x = 2, y = 2), "y" == token && (x = 2, y = 4), year = this.getInt(val, i_val, x, y), null == year) return null;
            i_val += year.length, 2 == year.length && (year = year > 70 ? 1900 + (year - 0) : 2e3 + (year - 0))
        } else if ("MMM" == token || "MMMM" == token) {
            month = 0;
            for (var names = "MMMM" == token ? Date.monthNames.concat(Date.monthAbbreviations) : Date.monthAbbreviations, i = 0; i < names.length; i++) {
                var month_name = names[i];
                if (val.substring(i_val, i_val + month_name.length).toLowerCase() == month_name.toLowerCase()) {
                    month = i % 12 + 1, i_val += month_name.length;
                    break
                }
            }
            if (1 > month || month > 12) return null
        } else if ("E" == token || "EE" == token || "EEE" == token || "EEEE" == token)
            for (var names = "EEEE" == token ? Date.dayNames : Date.dayAbbreviations, i = 0; i < names.length; i++) {
                var day_name = names[i];
                if (val.substring(i_val, i_val + day_name.length).toLowerCase() == day_name.toLowerCase()) {
                    i_val += day_name.length;
                    break
                }
            } else if ("MM" == token || "M" == token) {
            if (month = this.getInt(val, i_val, token.length, 2), null == month || 1 > month || month > 12) return null;
            i_val += month.length
        } else if ("dd" == token || "d" == token) {
            if (date = this.getInt(val, i_val, token.length, 2), null == date || 1 > date || date > 31) return null;
            i_val += date.length
        } else if ("hh" == token || "h" == token) {
            if (hh = this.getInt(val, i_val, token.length, 2), null == hh || 1 > hh || hh > 12) return null;
            i_val += hh.length
        } else if ("HH" == token || "H" == token) {
            if (hh = this.getInt(val, i_val, token.length, 2), null == hh || 0 > hh || hh > 23) return null;
            i_val += hh.length
        } else if ("KK" == token || "K" == token) {
            if (hh = this.getInt(val, i_val, token.length, 2), null == hh || 0 > hh || hh > 11) return null;
            i_val += hh.length, hh++
        } else if ("kk" == token || "k" == token) {
            if (hh = this.getInt(val, i_val, token.length, 2), null == hh || 1 > hh || hh > 24) return null;
            i_val += hh.length, hh--
        } else if ("mm" == token || "m" == token) {
            if (mm = this.getInt(val, i_val, token.length, 2), null == mm || 0 > mm || mm > 59) return null;
            i_val += mm.length
        } else if ("ss" == token || "s" == token) {
            if (ss = this.getInt(val, i_val, token.length, 2), null == ss || 0 > ss || ss > 59) return null;
            i_val += ss.length
        } else if ("a" == token) {
            if ("am" == val.substring(i_val, i_val + 2).toLowerCase()) ampm = "AM";
            else {
                if ("pm" != val.substring(i_val, i_val + 2).toLowerCase()) return null;
                ampm = "PM"
            }
            i_val += 2
        } else {
            if (val.substring(i_val, i_val + token.length) != token) return null;
            i_val += token.length
        }
    }
    if (i_val != val.length) return null;
    if (2 == month)
        if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {
            if (date > 29) return null
        } else if (date > 28) return null;
    return (4 == month || 6 == month || 9 == month || 11 == month) && date > 30 ? null : (12 > hh && "PM" == ampm ? hh = hh - 0 + 12 : hh > 11 && "AM" == ampm && (hh -= 12), new Date(year, month - 1, date, hh, mm, ss))
}, Date.isValid = function (val, format) {
    return null != Date.parseString(val, format)
}, Date.prototype.isBefore = function (date2) {
    return null == date2 ? !1 : this.getTime() < date2.getTime()
}, Date.prototype.isAfter = function (date2) {
    return null == date2 ? !1 : this.getTime() > date2.getTime()
}, Date.prototype.equals = function (date2) {
    return null == date2 ? !1 : this.getTime() == date2.getTime()
}, Date.prototype.equalsIgnoreTime = function (date2) {
    if (null == date2) return !1;
    var d1 = new Date(this.getTime()).clearTime(),
        d2 = new Date(date2.getTime()).clearTime();
    return d1.getTime() == d2.getTime()
}, Date.prototype.format = function (format) {
    format || (format = Date.defaultFormat), format += "";
    var result = "",
        i_format = 0,
        c = "",
        token = "",
        y = this.getFullYear() + "",
        M = this.getMonth() + 1,
        d = this.getDate(),
        E = this.getDay(),
        H = this.getHours(),
        m = this.getMinutes(),
        s = this.getSeconds(),
        value = new Object;
    for (y.length < 4 && (y = "" + (+y + 1900)), value.y = "" + y, value.yyyy = y, value.yy = y.substring(2, 4), value.M = M, value.MM = Date.LZ(M), value.MMM = Date.monthAbbreviations[M - 1], value.MMMM = Date.monthNames[M - 1], value.d = d, value.dd = Date.LZ(d), value.E = Date.dayAbbreviations[E], value.EE = Date.dayAbbreviations[E], value.EEE = Date.dayAbbreviations[E], value.EEEE = Date.dayNames[E], value.H = H, value.HH = Date.LZ(H), value.h = 0 == H ? 12 : H > 12 ? H - 12 : H, value.hh = Date.LZ(value.h), value.K = value.h - 1, value.k = value.H + 1, value.KK = Date.LZ(value.K), value.kk = Date.LZ(value.k), value.a = H > 11 ? "PM" : "AM", value.m = m, value.mm = Date.LZ(m), value.s = s, value.ss = Date.LZ(s); i_format < format.length; ) {
        for (c = format.charAt(i_format), token = ""; format.charAt(i_format) == c && i_format < format.length; ) token += format.charAt(i_format++);
        result += "undefined" != typeof value[token] ? value[token] : token
    }
    return result
}, Date.prototype.getDayName = function () {
    return Date.dayNames[this.getDay()]
}, Date.prototype.getDayAbbreviation = function () {
    return Date.dayAbbreviations[this.getDay()]
}, Date.prototype.getMonthName = function () {
    return Date.monthNames[this.getMonth()]
}, Date.prototype.getMonthAbbreviation = function () {
    return Date.monthAbbreviations[this.getMonth()]
}, Date.prototype.clearTime = function () {
    return this.setHours(0), this.setMinutes(0), this.setSeconds(0), this.setMilliseconds(0), this
}, Date.prototype.add = function (interval, number) {
    if ("undefined" == typeof interval || null == interval || "undefined" == typeof number || null == number) return this;
    if (number = +number, "y" == interval) this.setFullYear(this.getFullYear() + number);
    else if ("M" == interval) this.setMonth(this.getMonth() + number);
    else if ("d" == interval) this.setDate(this.getDate() + number);
    else if ("w" == interval)
        for (var step = number > 0 ? 1 : -1; 0 != number; ) {
            for (this.add("d", step); 0 == this.getDay() || 6 == this.getDay(); ) this.add("d", step);
            number -= step
        } else "h" == interval ? this.setHours(this.getHours() + number) : "m" == interval ? this.setMinutes(this.getMinutes() + number) : "s" == interval && this.setSeconds(this.getSeconds() + number);
    return this
}, Date.prototype.toInt = function () {
    return 1e4 * this.getFullYear() + 100 * (this.getMonth() + 1) + this.getDate()
}, Date.fromInt = function (dateInt) {
    var year = parseInt(dateInt / 1e4),
        month = parseInt((dateInt - 1e4 * year) / 100),
        day = parseInt(dateInt - 1e4 * year - 100 * month);
    return new Date(year, month - 1, day, 12, 0, 0)
}, Date.prototype.isHoliday = function () {
    return isHoliday(this)
}, Date.prototype.isToday = function () {
    return this.toInt() == (new Date).toInt()
}, Date.prototype.incrementDateByWorkingDays = function (days) {
    for (var q = Math.abs(days); q > 0; ) this.setDate(this.getDate() + (days > 0 ? 1 : -1)), this.isHoliday() || q--;
    return this
}, Date.prototype.distanceInWorkingDays = function (toDate) {
    var pos = new Date(this.getTime());
    pos.setHours(23, 59, 59, 999);
    var days = 0,
        nd = new Date(toDate.getTime());
    nd.setHours(23, 59, 59, 999);
    for (var end = nd.getTime(); pos.getTime() <= end; ) days += isHoliday(pos) ? 0 : 1, pos.setDate(pos.getDate() + 1);
    return days
}, Date.prototype.setFirstDayOfThisWeek = function (firstDayOfWeek) {
    firstDayOfWeek || (firstDayOfWeek = Date.firstDayOfWeek), this.setDate(this.getDate() - this.getDay() + firstDayOfWeek - (0 == this.getDay() && 0 != firstDayOfWeek ? 7 : 0))
}, $.fn.loadTemplates = function () {
    return $.JST.loadTemplates($(this)), this
}, $.JST = {
    _templates: new Object,
    _decorators: new Object,
    loadTemplates: function (elems) {
        elems.each(function () {
            $(this).find(".__template__").each(function () {
                var tmpl = $(this),
                    type = tmpl.attr("type");
                if (8 == tmpl.get(0).firstChild.nodeType) var templateBody = tmpl.get(0).firstChild.nodeValue;
                else var templateBody = tmpl.html(); if (templateBody.match(/##\w+##/)) try {
                    $.JST._templates[type] = templateBody
                } catch (e) {
                    console.error("JST error: " + type, e, templateBody)
                } else {
                    var strFunc = "var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('" + templateBody.replace(/[\r\t\n]/g, " ").replace(/'(?=[^#]*#\))/g, "	").split("'").join("\\'").split("	").join("'").replace(/\(#=(.+?)#\)/g, "',$1,'").split("(#").join("');").split("#)").join("p.push('") + "');}return p.join('');";
                    try {
                        $.JST._templates[type] = new Function("obj", strFunc)
                    } catch (e) {
                        console.error("JST error: " + type, e, strFunc)
                    }
                }
                tmpl.remove()
            })
        })
    },
    createFromTemplate: function (jsonData, template, transformToPrintable) {
        function fillStripData(strip, data) {
            for (var prop in data) {
                var value = data[prop];
                strip = strip.replace(new RegExp("##" + prop + "##", "gi"), value)
            }
            return strip = strip.replace(new RegExp("##\\w+##", "gi"), "")
        }
        var templates = $.JST._templates,
            jsData = new Object;
        if (transformToPrintable)
            for (var prop in jsonData) {
                var value = jsonData[prop];
                "string" == typeof value && (value = (value + "").replace(/\n/g, "<br>")), jsData[prop] = value
            } else jsData = jsonData;
        var stripString = "";
        if ("undefined" == typeof template) alert("Template is required"), stripString = "<div>Template is required</div>";
        else if ("function" == typeof templates[template]) try {
            stripString = templates[template](jsData)
        } catch (e) {
            console.error("JST error: " + template, e.message), stripString = "<div> ERROR: " + template + "<br>" + e.message + "</div>"
        } else {
            if (stripString = templates[template], !stripString || "" == stripString.trim()) return console.error("No template found for type '" + template + "'"), $("<div>");
            stripString = fillStripData(stripString, jsData)
        }
        var ret = $(stripString);
        ret.attr("__template", template);
        var dec = $.JST._decorators[template];
        return "function" == typeof dec && dec(ret, jsData), ret
    },
    existsTemplate: function (template) {
        return $.JST._templates[template]
    },
    loadDecorator: function (template, decorator) {
        $.JST._decorators[template] = decorator
    },
    getDecorator: function (template) {
        return $.JST._decorators[template]
    },
    decorateTemplate: function (element) {
        var dec = $.JST._decorators[element.attr("__template")];
        "function" == typeof dec && dec(editor)
    },
    ajaxLoadAsynchTemplates: function (templateUrl, callback) {
        $.get(templateUrl, function (data) {
            var div = $("<div>");
            div.html(data), $.JST.loadTemplates(div), callback()
        }, "html")
    },
    ajaxLoadTemplates: function (templateUrl) {
        $.ajax({
            async: !1,
            url: templateUrl,
            dataType: "html",
            success: function (data) {
                var div = $("<div>");
                div.html(data), $.JST.loadTemplates(div)
            }
        })
    }
}, !function (a) {
    a(["jquery"], function (a) {
        return function () {
            function b(a, b, c) {
                return o({
                    type: u.error,
                    iconClass: p().iconClasses.error,
                    message: a,
                    optionsOverride: c,
                    title: b
                })
            }

            function c(b, c) {
                return b || (b = p()), r = a("#" + b.containerId), r.length ? r : (c && (r = l(b)), r)
            }

            function d(a, b, c) {
                return o({
                    type: u.info,
                    iconClass: p().iconClasses.info,
                    message: a,
                    optionsOverride: c,
                    title: b
                })
            }

            function e(a) {
                s = a
            }

            function f(a, b, c) {
                return o({
                    type: u.success,
                    iconClass: p().iconClasses.success,
                    message: a,
                    optionsOverride: c,
                    title: b
                })
            }

            function g(a, b, c) {
                return o({
                    type: u.warning,
                    iconClass: p().iconClasses.warning,
                    message: a,
                    optionsOverride: c,
                    title: b
                })
            }

            function h(a) {
                var b = p();
                r || c(b), k(a, b) || j(b)
            }

            function i(b) {
                var d = p();
                return r || c(d), b && 0 === a(":focus", b).length ? void q(b) : void (r.children().length && r.remove())
            }

            function j(b) {
                for (var c = r.children(), d = c.length - 1; d >= 0; d--) k(a(c[d]), b)
            }

            function k(b, c) {
                return b && 0 === a(":focus", b).length ? (b[c.hideMethod]({
                    duration: c.hideDuration,
                    easing: c.hideEasing,
                    complete: function () {
                        q(b)
                    }
                }), !0) : !1
            }

            function l(b) {
                return r = a("<div/>").attr("id", b.containerId).addClass(b.positionClass).attr("aria-live", "polite").attr("role", "alert"), r.appendTo(a(b.target)), r
            }

            function m() {
                return {
                    tapToDismiss: !0,
                    toastClass: "toast",
                    containerId: "toast-container",
                    debug: !1,
                    showMethod: "fadeIn",
                    showDuration: 300,
                    showEasing: "swing",
                    onShown: void 0,
                    hideMethod: "fadeOut",
                    hideDuration: 1e3,
                    hideEasing: "swing",
                    onHidden: void 0,
                    extendedTimeOut: 1e3,
                    iconClasses: {
                        error: "toast-error",
                        info: "toast-info",
                        success: "toast-success",
                        warning: "toast-warning"
                    },
                    iconClass: "toast-info",
                    positionClass: "toast-top-right",
                    timeOut: 5e3,
                    titleClass: "toast-title",
                    messageClass: "toast-message",
                    target: "body",
                    closeHtml: "<button>&times;</button>",
                    newestOnTop: !0
                }
            }

            function n(a) {
                s && s(a)
            }

            function o(b) {
                function d(b) {
                    return !a(":focus", j).length || b ? j[g.hideMethod]({
                        duration: g.hideDuration,
                        easing: g.hideEasing,
                        complete: function () {
                            q(j), g.onHidden && "hidden" !== o.state && g.onHidden(), o.state = "hidden", o.endTime = new Date, n(o)
                        }
                    }) : void 0
                }

                function e() {
                    (g.timeOut > 0 || g.extendedTimeOut > 0) && (i = setTimeout(d, g.extendedTimeOut))
                }

                function f() {
                    clearTimeout(i), j.stop(!0, !0)[g.showMethod]({
                        duration: g.showDuration,
                        easing: g.showEasing
                    })
                }
                var g = p(),
                    h = b.iconClass || g.iconClass;
                "undefined" != typeof b.optionsOverride && (g = a.extend(g, b.optionsOverride), h = b.optionsOverride.iconClass || h), t++, r = c(g, !0);
                var i = null,
                    j = a("<div/>"),
                    k = a("<div/>"),
                    l = a("<div/>"),
                    m = a(g.closeHtml),
                    o = {
                        toastId: t,
                        state: "visible",
                        startTime: new Date,
                        options: g,
                        map: b
                    };
                return b.iconClass && j.addClass(g.toastClass).addClass(h), b.title && (k.append(b.title).addClass(g.titleClass), j.append(k)), b.message && (l.append(b.message).addClass(g.messageClass), j.append(l)), g.closeButton && (m.addClass("toast-close-button").attr("role", "button"), j.prepend(m)), j.hide(), g.newestOnTop ? r.prepend(j) : r.append(j), j[g.showMethod]({
                    duration: g.showDuration,
                    easing: g.showEasing,
                    complete: g.onShown
                }), g.timeOut > 0 && (i = setTimeout(d, g.timeOut)), j.hover(f, e), !g.onclick && g.tapToDismiss && j.click(d), g.closeButton && m && m.click(function (a) {
                    a.stopPropagation ? a.stopPropagation() : void 0 !== a.cancelBubble && a.cancelBubble !== !0 && (a.cancelBubble = !0), d(!0)
                }), g.onclick && j.click(function () {
                    g.onclick(), d()
                }), n(o), g.debug && console && console.log(o), j
            }

            function p() {
                return a.extend({}, m(), v.options)
            }

            function q(a) {
                r || (r = c()), a.is(":visible") || (a.remove(), a = null, 0 === r.children().length && r.remove())
            }
            var r, s, t = 0,
                u = {
                    error: "error",
                    info: "info",
                    success: "success",
                    warning: "warning"
                },
                v = {
                    clear: h,
                    remove: i,
                    error: b,
                    getContainer: c,
                    info: d,
                    options: {},
                    subscribe: e,
                    success: f,
                    version: "2.0.3",
                    warning: g
                };
            return v
        } ()
    })
} ("function" == typeof define && define.amd ? define : function (a, b) {
    "undefined" != typeof module && module.exports ? module.exports = b(require("jquery")) : window.toastr = b(window.jQuery)
});
var holidayArrayData = [],
    holidayArrayForInternal = [],
    userLocalCulture,
    userLocalCultureEndpoint; Date.monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], Date.monthAbbreviations = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], Date.dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], Date.dayAbbreviations = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], Date.preferAmericanFormat = !1, Date.firstDayOfWeek = 1, Number.decimalSeparator = ".", Number.groupingSeparator = ",", Number.minusSign = "-", Number.currencyFormat = "##0.00";


var millisInWorkingDay = 36e6,
    workingDaysPerWeek = 5,
    i18n = {
        FORM_IS_CHANGED: "You have some unsaved data on the page!",
        YES: "yes",
        NO: "no",
        FLD_CONFIRM_DELETE: "confirm the deletion?",
        INVALID_DATA: "The data inserted are invalid for the field format.",
        ERROR_ON_FIELD: "Error on field",
        CLOSE_ALL_CONTAINERS: "close all?",
        DO_YOU_CONFIRM: "Do you confirm?"
    };